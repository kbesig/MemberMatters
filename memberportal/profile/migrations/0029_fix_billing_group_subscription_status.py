# Generated by Django 3.2.25 on 2024-12-19 for household-membership feature

from django.db import migrations


def fix_billing_group_subscription_status(apps, schema_editor):
    """
    Fix the billing group subscription status for secondary members.
    This corrects the issue from migration 0028 where the wrong related_name was used.
    """
    Profile = apps.get_model("profile", "Profile")

    # Get all profiles that are in billing groups (not primary members)
    billing_group_members = Profile.objects.filter(billing_group__isnull=False).exclude(
        # Exclude primary members who manage their own subscriptions
        id__in=Profile.objects.filter(
            billing_group_primary_member__isnull=False
        ).values_list("id", flat=True)
    )

    updated_count = 0

    for member in billing_group_members:
        if member.billing_group and member.billing_group.primary_member:
            primary_member = member.billing_group.primary_member

            # Set status based on primary member's subscription status
            if primary_member.subscription_status == "active":
                member.subscription_status = "group_active"
                updated_count += 1
            elif primary_member.subscription_status in ["inactive", "cancelling"]:
                member.subscription_status = "group_inactive"
                updated_count += 1

            member.save()

    print(f"Updated {updated_count} billing group members' subscription status")


def reverse_fix_billing_group_subscription_status(apps, schema_editor):
    """
    Reverse the fix by setting all group members back to inactive
    """
    Profile = apps.get_model("profile", "Profile")

    # Set all group_active and group_inactive members back to inactive
    Profile.objects.filter(
        subscription_status__in=["group_active", "group_inactive"]
    ).update(subscription_status="inactive")


class Migration(migrations.Migration):

    dependencies = [
        ("profile", "0028_update_billing_group_subscription_status"),
    ]

    operations = [
        migrations.RunPython(
            fix_billing_group_subscription_status,
            reverse_fix_billing_group_subscription_status,
        ),
    ]
